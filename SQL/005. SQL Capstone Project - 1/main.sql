DROP TABLE IF EXISTS SALESMAN;
DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS ORDERS;

CREATE TABLE SALESMAN(
  SALESMAN_ID  TEXT PRIMARY KEY,
  NAME TEXT,
  CITY TEXT,
  COMMISSION TEXT
);

INSERT INTO SALESMAN(SALESMAN_ID, NAME, CITY, COMMISSION)VALUES
("5001", "JAMES HONG", "NEW YORK", "0.15"),
("5002", "BRUCY KRUCY", "PARIS", "0.13"),
("5003", "BILAI KUTTA", "INDIA", "0.11"),
("5004", "PAGLA CHAGLA", "INDIA", "0.12"),
("5005", "BOLOD GORU", "BANGLADESH", "0.19"),
("5006", "HEN OX", "SOMALIA", "0.20");

CREATE TABLE CUSTOMER(
  CUSTOMER_ID TEXT,
  CUST_NAME TEXT PRIMARY KEY,
  CITY TEXT,
  GRADE TEXT,
  SALESMAN_ID TEXT
);

INSERT INTO CUSTOMER(CUSTOMER_ID, CUST_NAME, CITY, GRADE, SALESMAN_ID)VALUES
("3002", "RUMOR T", "MEU MEU", "100", "5001"),
("3007", "SCANNER", "INDIA", "200", "5005"),
("3008", "GROCERY", "CANADA", "300", "5003"),
("3009", "MINAKLE", "NEW YORK", "400", "5004"),
("3004", "WRITERE", "LONDON", "300", "5002"),
("3005", "KIB WAT", "LONDON", "200", "5002");

CREATE TABLE ORDERS(
  ORD_NO TEXT PRIMARY KEY,
  PURCH_AMT TEXT,
  ORD_DATE TEXT,
  CUSTOMER_ID TEXT,
  SALESMAN_ID TEXT
);

INSERT INTO ORDERS (ORD_NO, PURCH_AMT, ORD_DATE, CUSTOMER_ID, SALESMAN_ID) VALUES
('O1001', '1500.00', '2025-06-01', '3005', '5001'),
('O1002', '2300.50', '2025-06-02', '3009', '5002'),
('O1003', '500.00',  '2025-06-03', '3007', '5005'),
('O1004', '3200.75', '2025-06-01', '3008', '5004'),
('O1005', '1450.00', '2025-06-04', '3002', '5003');

-- QUERIES

-- WHICH CUSTOMERS AND SALESMAN HAS SAME CITIES?
SELECT C.CUST_NAME, S.NAME AS SALESMAN_NAME, S.CITY
FROM CUSTOMER C
JOIN SALESMAN S ON C.CITY = S.CITY;

-- LINKING CUSTOMERS TO THEIR SALESMAN
SELECT C.CUST_NAME, S.NAME AS SALESMAN_NAME
FROM CUSTOMER C
JOIN SALESMAN S ON C.SALESMAN_ID = S.SALESMAN_ID;

-- FETCHING ORDERS WHERE CUSTOMER'S CITY DOES NOT MATCH SALESMAN CITY
SELECT O.ORD_NO, C.CUST_NAME, C.CITY AS CUSTOMER_CITY, S.NAME AS SALESMAN_NAME, S.CITY AS SALESMAN_CITY
FROM ORDERS O
JOIN CUSTOMER C ON O.CUSTOMER_ID = C.CUSTOMER_ID
JOIN SALESMAN S ON O.SALESMAN_ID = S.SALESMAN_ID
WHERE C.CITY <> S.CITY;

-- Fetching all orders with customers name
SELECT ORDERS.ORD_NO, CUSTOMER.CUST_NAME
FROM ORDERS
JOIN CUSTOMER ON ORDERS.CUSTOMER_ID = CUSTOMER.CUSTOMER_ID;

-- CUSTOMERS WITH GRADES
SELECT CUSTOMER.CUST_NAME AS "CUSTOMER", CUSTOMER.GRADE AS "GRADE"
FROM ORDERS
JOIN CUSTOMER ON ORDERS.CUSTOMER_ID = CUSTOMER.CUSTOMER_ID
WHERE CUSTOMER.GRADE IS NOT NULL;

-- CUSTOMERS WITH SALESMEN WHERE COMMISSION IS BETWEEN 0.12 AND 0.14
SELECT CUSTOMER.CUST_NAME AS "CUSTOMER",
CUSTOMER.CITY AS "CITY",
SALESMAN.COMMISSION
FROM CUSTOMER
JOIN SALESMAN ON CUSTOMER.SALESMAN_ID = SALESMAN.SALESMAN_ID
WHERE SALESMAN.COMMISSION BETWEEN 0.12 AND 0.14;

-- CALCULATING COMMISSIONS FOR ORDERS WHERE CUSTOMER GRADE IS 200 OR MORE
SELECT
    ORDERS.ORD_NO,
    CUSTOMER.CUST_NAME,
    SALESMAN.COMMISSION AS "COMMISSION",
    ORDERS.PURCH_AMT * SALESMAN.COMMISSION AS "COMMISSION"
FROM
    ORDERS
JOIN
    SALESMAN ON ORDERS.SALESMAN_ID = SALESMAN.SALESMAN_ID  
JOIN
    CUSTOMER ON ORDERS.CUSTOMER_ID = CUSTOMER.CUSTOMER_ID
WHERE
    CUSTOMER.GRADE >= 200;

-- ORDERS ON A SPECIFIC DATE
SELECT * FROM CUSTOMER
JOIN ORDERS ON CUSTOMER.CUSTOMER_ID = ORDERS.CUSTOMER_ID
WHERE ORDERS.ORD_DATE = '2025-06-01';